/* 
 * GloRemit - REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// DoBillPaymentModelCreated
    /// </summary>
    [DataContract]
    public partial class DoBillPaymentModelCreated :  IEquatable<DoBillPaymentModelCreated>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DoBillPaymentModelCreated" /> class.
        /// </summary>
        /// <param name="UIDBranch">UIDBranch.</param>
        /// <param name="TransID">TransID.</param>
        /// <param name="SFirstName">SFirstName.</param>
        /// <param name="SLastName">SLastName.</param>
        /// <param name="SIdType">SIdType.</param>
        /// <param name="SIdNum">SIdNum.</param>
        /// <param name="SIdExpiry">SIdExpiry.</param>
        /// <param name="SContactNum">SContactNum.</param>
        /// <param name="SEmail">SEmail.</param>
        /// <param name="SCountry">SCountry.</param>
        /// <param name="SCurrency">SCurrency.</param>
        /// <param name="BCountry">BCountry.</param>
        /// <param name="BCurrency">BCurrency.</param>
        /// <param name="BAmount">BAmount.</param>
        /// <param name="BIssuerCode">BIssuerCode.</param>
        /// <param name="BAccNum">BAccNum.</param>
        /// <param name="BBillNum">BBillNum.</param>
        /// <param name="BAccName">BAccName.</param>
        /// <param name="BStatementDate">BStatementDate.</param>
        /// <param name="BDueDate">BDueDate.</param>
        /// <param name="BBillType">BBillType.</param>
        /// <param name="BCustomInfo1">BCustomInfo1.</param>
        /// <param name="BCustomInfo2">BCustomInfo2.</param>
        /// <param name="BCustomInfo3">BCustomInfo3.</param>
        /// <param name="BCustomInfo4">BCustomInfo4.</param>
        /// <param name="BCustomInfo5">BCustomInfo5.</param>
        /// <param name="BCustomInfo6">BCustomInfo6.</param>
        /// <param name="BCustomInfo7">BCustomInfo7.</param>
        /// <param name="BCustomInfo8">BCustomInfo8.</param>
        /// <param name="BCustomInfo9">BCustomInfo9.</param>
        /// <param name="BCustomInfo10">BCustomInfo10.</param>
        public DoBillPaymentModelCreated(string UIDBranch = default(string), string TransID = default(string), string SFirstName = default(string), string SLastName = default(string), int? SIdType = default(int?), string SIdNum = default(string), string SIdExpiry = default(string), string SContactNum = default(string), string SEmail = default(string), string SCountry = default(string), string SCurrency = default(string), string BCountry = default(string), string BCurrency = default(string), double? BAmount = default(double?), string BIssuerCode = default(string), string BAccNum = default(string), string BBillNum = default(string), string BAccName = default(string), string BStatementDate = default(string), string BDueDate = default(string), string BBillType = default(string), string BCustomInfo1 = default(string), string BCustomInfo2 = default(string), string BCustomInfo3 = default(string), string BCustomInfo4 = default(string), string BCustomInfo5 = default(string), string BCustomInfo6 = default(string), string BCustomInfo7 = default(string), string BCustomInfo8 = default(string), string BCustomInfo9 = default(string), string BCustomInfo10 = default(string))
        {
            this.UIDBranch = UIDBranch;
            this.TransID = TransID;
            this.SFirstName = SFirstName;
            this.SLastName = SLastName;
            this.SIdType = SIdType;
            this.SIdNum = SIdNum;
            this.SIdExpiry = SIdExpiry;
            this.SContactNum = SContactNum;
            this.SEmail = SEmail;
            this.SCountry = SCountry;
            this.SCurrency = SCurrency;
            this.BCountry = BCountry;
            this.BCurrency = BCurrency;
            this.BAmount = BAmount;
            this.BIssuerCode = BIssuerCode;
            this.BAccNum = BAccNum;
            this.BBillNum = BBillNum;
            this.BAccName = BAccName;
            this.BStatementDate = BStatementDate;
            this.BDueDate = BDueDate;
            this.BBillType = BBillType;
            this.BCustomInfo1 = BCustomInfo1;
            this.BCustomInfo2 = BCustomInfo2;
            this.BCustomInfo3 = BCustomInfo3;
            this.BCustomInfo4 = BCustomInfo4;
            this.BCustomInfo5 = BCustomInfo5;
            this.BCustomInfo6 = BCustomInfo6;
            this.BCustomInfo7 = BCustomInfo7;
            this.BCustomInfo8 = BCustomInfo8;
            this.BCustomInfo9 = BCustomInfo9;
            this.BCustomInfo10 = BCustomInfo10;
        }
        
        /// <summary>
        /// Gets or Sets UIDBranch
        /// </summary>
        [DataMember(Name="UIDBranch", EmitDefaultValue=false)]
        public string UIDBranch { get; set; }

        /// <summary>
        /// Gets or Sets TransID
        /// </summary>
        [DataMember(Name="transID", EmitDefaultValue=false)]
        public string TransID { get; set; }

        /// <summary>
        /// Gets or Sets SFirstName
        /// </summary>
        [DataMember(Name="sFirstName", EmitDefaultValue=false)]
        public string SFirstName { get; set; }

        /// <summary>
        /// Gets or Sets SLastName
        /// </summary>
        [DataMember(Name="sLastName", EmitDefaultValue=false)]
        public string SLastName { get; set; }

        /// <summary>
        /// Gets or Sets SIdType
        /// </summary>
        [DataMember(Name="sIdType", EmitDefaultValue=false)]
        public int? SIdType { get; set; }

        /// <summary>
        /// Gets or Sets SIdNum
        /// </summary>
        [DataMember(Name="sIdNum", EmitDefaultValue=false)]
        public string SIdNum { get; set; }

        /// <summary>
        /// Gets or Sets SIdExpiry
        /// </summary>
        [DataMember(Name="sIdExpiry", EmitDefaultValue=false)]
        public string SIdExpiry { get; set; }

        /// <summary>
        /// Gets or Sets SContactNum
        /// </summary>
        [DataMember(Name="sContactNum", EmitDefaultValue=false)]
        public string SContactNum { get; set; }

        /// <summary>
        /// Gets or Sets SEmail
        /// </summary>
        [DataMember(Name="sEmail", EmitDefaultValue=false)]
        public string SEmail { get; set; }

        /// <summary>
        /// Gets or Sets SCountry
        /// </summary>
        [DataMember(Name="sCountry", EmitDefaultValue=false)]
        public string SCountry { get; set; }

        /// <summary>
        /// Gets or Sets SCurrency
        /// </summary>
        [DataMember(Name="sCurrency", EmitDefaultValue=false)]
        public string SCurrency { get; set; }

        /// <summary>
        /// Gets or Sets BCountry
        /// </summary>
        [DataMember(Name="bCountry", EmitDefaultValue=false)]
        public string BCountry { get; set; }

        /// <summary>
        /// Gets or Sets BCurrency
        /// </summary>
        [DataMember(Name="bCurrency", EmitDefaultValue=false)]
        public string BCurrency { get; set; }

        /// <summary>
        /// Gets or Sets BAmount
        /// </summary>
        [DataMember(Name="bAmount", EmitDefaultValue=false)]
        public double? BAmount { get; set; }

        /// <summary>
        /// Gets or Sets BIssuerCode
        /// </summary>
        [DataMember(Name="bIssuerCode", EmitDefaultValue=false)]
        public string BIssuerCode { get; set; }

        /// <summary>
        /// Gets or Sets BAccNum
        /// </summary>
        [DataMember(Name="bAccNum", EmitDefaultValue=false)]
        public string BAccNum { get; set; }

        /// <summary>
        /// Gets or Sets BBillNum
        /// </summary>
        [DataMember(Name="bBillNum", EmitDefaultValue=false)]
        public string BBillNum { get; set; }

        /// <summary>
        /// Gets or Sets BAccName
        /// </summary>
        [DataMember(Name="bAccName", EmitDefaultValue=false)]
        public string BAccName { get; set; }

        /// <summary>
        /// Gets or Sets BStatementDate
        /// </summary>
        [DataMember(Name="bStatementDate", EmitDefaultValue=false)]
        public string BStatementDate { get; set; }

        /// <summary>
        /// Gets or Sets BDueDate
        /// </summary>
        [DataMember(Name="bDueDate", EmitDefaultValue=false)]
        public string BDueDate { get; set; }

        /// <summary>
        /// Gets or Sets BBillType
        /// </summary>
        [DataMember(Name="bBillType", EmitDefaultValue=false)]
        public string BBillType { get; set; }

        /// <summary>
        /// Gets or Sets BCustomInfo1
        /// </summary>
        [DataMember(Name="bCustomInfo1", EmitDefaultValue=false)]
        public string BCustomInfo1 { get; set; }

        /// <summary>
        /// Gets or Sets BCustomInfo2
        /// </summary>
        [DataMember(Name="bCustomInfo2", EmitDefaultValue=false)]
        public string BCustomInfo2 { get; set; }

        /// <summary>
        /// Gets or Sets BCustomInfo3
        /// </summary>
        [DataMember(Name="bCustomInfo3", EmitDefaultValue=false)]
        public string BCustomInfo3 { get; set; }

        /// <summary>
        /// Gets or Sets BCustomInfo4
        /// </summary>
        [DataMember(Name="bCustomInfo4", EmitDefaultValue=false)]
        public string BCustomInfo4 { get; set; }

        /// <summary>
        /// Gets or Sets BCustomInfo5
        /// </summary>
        [DataMember(Name="bCustomInfo5", EmitDefaultValue=false)]
        public string BCustomInfo5 { get; set; }

        /// <summary>
        /// Gets or Sets BCustomInfo6
        /// </summary>
        [DataMember(Name="bCustomInfo6", EmitDefaultValue=false)]
        public string BCustomInfo6 { get; set; }

        /// <summary>
        /// Gets or Sets BCustomInfo7
        /// </summary>
        [DataMember(Name="bCustomInfo7", EmitDefaultValue=false)]
        public string BCustomInfo7 { get; set; }

        /// <summary>
        /// Gets or Sets BCustomInfo8
        /// </summary>
        [DataMember(Name="bCustomInfo8", EmitDefaultValue=false)]
        public string BCustomInfo8 { get; set; }

        /// <summary>
        /// Gets or Sets BCustomInfo9
        /// </summary>
        [DataMember(Name="bCustomInfo9", EmitDefaultValue=false)]
        public string BCustomInfo9 { get; set; }

        /// <summary>
        /// Gets or Sets BCustomInfo10
        /// </summary>
        [DataMember(Name="bCustomInfo10", EmitDefaultValue=false)]
        public string BCustomInfo10 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DoBillPaymentModelCreated {\n");
            sb.Append("  UIDBranch: ").Append(UIDBranch).Append("\n");
            sb.Append("  TransID: ").Append(TransID).Append("\n");
            sb.Append("  SFirstName: ").Append(SFirstName).Append("\n");
            sb.Append("  SLastName: ").Append(SLastName).Append("\n");
            sb.Append("  SIdType: ").Append(SIdType).Append("\n");
            sb.Append("  SIdNum: ").Append(SIdNum).Append("\n");
            sb.Append("  SIdExpiry: ").Append(SIdExpiry).Append("\n");
            sb.Append("  SContactNum: ").Append(SContactNum).Append("\n");
            sb.Append("  SEmail: ").Append(SEmail).Append("\n");
            sb.Append("  SCountry: ").Append(SCountry).Append("\n");
            sb.Append("  SCurrency: ").Append(SCurrency).Append("\n");
            sb.Append("  BCountry: ").Append(BCountry).Append("\n");
            sb.Append("  BCurrency: ").Append(BCurrency).Append("\n");
            sb.Append("  BAmount: ").Append(BAmount).Append("\n");
            sb.Append("  BIssuerCode: ").Append(BIssuerCode).Append("\n");
            sb.Append("  BAccNum: ").Append(BAccNum).Append("\n");
            sb.Append("  BBillNum: ").Append(BBillNum).Append("\n");
            sb.Append("  BAccName: ").Append(BAccName).Append("\n");
            sb.Append("  BStatementDate: ").Append(BStatementDate).Append("\n");
            sb.Append("  BDueDate: ").Append(BDueDate).Append("\n");
            sb.Append("  BBillType: ").Append(BBillType).Append("\n");
            sb.Append("  BCustomInfo1: ").Append(BCustomInfo1).Append("\n");
            sb.Append("  BCustomInfo2: ").Append(BCustomInfo2).Append("\n");
            sb.Append("  BCustomInfo3: ").Append(BCustomInfo3).Append("\n");
            sb.Append("  BCustomInfo4: ").Append(BCustomInfo4).Append("\n");
            sb.Append("  BCustomInfo5: ").Append(BCustomInfo5).Append("\n");
            sb.Append("  BCustomInfo6: ").Append(BCustomInfo6).Append("\n");
            sb.Append("  BCustomInfo7: ").Append(BCustomInfo7).Append("\n");
            sb.Append("  BCustomInfo8: ").Append(BCustomInfo8).Append("\n");
            sb.Append("  BCustomInfo9: ").Append(BCustomInfo9).Append("\n");
            sb.Append("  BCustomInfo10: ").Append(BCustomInfo10).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DoBillPaymentModelCreated);
        }

        /// <summary>
        /// Returns true if DoBillPaymentModelCreated instances are equal
        /// </summary>
        /// <param name="input">Instance of DoBillPaymentModelCreated to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DoBillPaymentModelCreated input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.UIDBranch == input.UIDBranch ||
                    (this.UIDBranch != null &&
                    this.UIDBranch.Equals(input.UIDBranch))
                ) && 
                (
                    this.TransID == input.TransID ||
                    (this.TransID != null &&
                    this.TransID.Equals(input.TransID))
                ) && 
                (
                    this.SFirstName == input.SFirstName ||
                    (this.SFirstName != null &&
                    this.SFirstName.Equals(input.SFirstName))
                ) && 
                (
                    this.SLastName == input.SLastName ||
                    (this.SLastName != null &&
                    this.SLastName.Equals(input.SLastName))
                ) && 
                (
                    this.SIdType == input.SIdType ||
                    (this.SIdType != null &&
                    this.SIdType.Equals(input.SIdType))
                ) && 
                (
                    this.SIdNum == input.SIdNum ||
                    (this.SIdNum != null &&
                    this.SIdNum.Equals(input.SIdNum))
                ) && 
                (
                    this.SIdExpiry == input.SIdExpiry ||
                    (this.SIdExpiry != null &&
                    this.SIdExpiry.Equals(input.SIdExpiry))
                ) && 
                (
                    this.SContactNum == input.SContactNum ||
                    (this.SContactNum != null &&
                    this.SContactNum.Equals(input.SContactNum))
                ) && 
                (
                    this.SEmail == input.SEmail ||
                    (this.SEmail != null &&
                    this.SEmail.Equals(input.SEmail))
                ) && 
                (
                    this.SCountry == input.SCountry ||
                    (this.SCountry != null &&
                    this.SCountry.Equals(input.SCountry))
                ) && 
                (
                    this.SCurrency == input.SCurrency ||
                    (this.SCurrency != null &&
                    this.SCurrency.Equals(input.SCurrency))
                ) && 
                (
                    this.BCountry == input.BCountry ||
                    (this.BCountry != null &&
                    this.BCountry.Equals(input.BCountry))
                ) && 
                (
                    this.BCurrency == input.BCurrency ||
                    (this.BCurrency != null &&
                    this.BCurrency.Equals(input.BCurrency))
                ) && 
                (
                    this.BAmount == input.BAmount ||
                    (this.BAmount != null &&
                    this.BAmount.Equals(input.BAmount))
                ) && 
                (
                    this.BIssuerCode == input.BIssuerCode ||
                    (this.BIssuerCode != null &&
                    this.BIssuerCode.Equals(input.BIssuerCode))
                ) && 
                (
                    this.BAccNum == input.BAccNum ||
                    (this.BAccNum != null &&
                    this.BAccNum.Equals(input.BAccNum))
                ) && 
                (
                    this.BBillNum == input.BBillNum ||
                    (this.BBillNum != null &&
                    this.BBillNum.Equals(input.BBillNum))
                ) && 
                (
                    this.BAccName == input.BAccName ||
                    (this.BAccName != null &&
                    this.BAccName.Equals(input.BAccName))
                ) && 
                (
                    this.BStatementDate == input.BStatementDate ||
                    (this.BStatementDate != null &&
                    this.BStatementDate.Equals(input.BStatementDate))
                ) && 
                (
                    this.BDueDate == input.BDueDate ||
                    (this.BDueDate != null &&
                    this.BDueDate.Equals(input.BDueDate))
                ) && 
                (
                    this.BBillType == input.BBillType ||
                    (this.BBillType != null &&
                    this.BBillType.Equals(input.BBillType))
                ) && 
                (
                    this.BCustomInfo1 == input.BCustomInfo1 ||
                    (this.BCustomInfo1 != null &&
                    this.BCustomInfo1.Equals(input.BCustomInfo1))
                ) && 
                (
                    this.BCustomInfo2 == input.BCustomInfo2 ||
                    (this.BCustomInfo2 != null &&
                    this.BCustomInfo2.Equals(input.BCustomInfo2))
                ) && 
                (
                    this.BCustomInfo3 == input.BCustomInfo3 ||
                    (this.BCustomInfo3 != null &&
                    this.BCustomInfo3.Equals(input.BCustomInfo3))
                ) && 
                (
                    this.BCustomInfo4 == input.BCustomInfo4 ||
                    (this.BCustomInfo4 != null &&
                    this.BCustomInfo4.Equals(input.BCustomInfo4))
                ) && 
                (
                    this.BCustomInfo5 == input.BCustomInfo5 ||
                    (this.BCustomInfo5 != null &&
                    this.BCustomInfo5.Equals(input.BCustomInfo5))
                ) && 
                (
                    this.BCustomInfo6 == input.BCustomInfo6 ||
                    (this.BCustomInfo6 != null &&
                    this.BCustomInfo6.Equals(input.BCustomInfo6))
                ) && 
                (
                    this.BCustomInfo7 == input.BCustomInfo7 ||
                    (this.BCustomInfo7 != null &&
                    this.BCustomInfo7.Equals(input.BCustomInfo7))
                ) && 
                (
                    this.BCustomInfo8 == input.BCustomInfo8 ||
                    (this.BCustomInfo8 != null &&
                    this.BCustomInfo8.Equals(input.BCustomInfo8))
                ) && 
                (
                    this.BCustomInfo9 == input.BCustomInfo9 ||
                    (this.BCustomInfo9 != null &&
                    this.BCustomInfo9.Equals(input.BCustomInfo9))
                ) && 
                (
                    this.BCustomInfo10 == input.BCustomInfo10 ||
                    (this.BCustomInfo10 != null &&
                    this.BCustomInfo10.Equals(input.BCustomInfo10))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.UIDBranch != null)
                    hashCode = hashCode * 59 + this.UIDBranch.GetHashCode();
                if (this.TransID != null)
                    hashCode = hashCode * 59 + this.TransID.GetHashCode();
                if (this.SFirstName != null)
                    hashCode = hashCode * 59 + this.SFirstName.GetHashCode();
                if (this.SLastName != null)
                    hashCode = hashCode * 59 + this.SLastName.GetHashCode();
                if (this.SIdType != null)
                    hashCode = hashCode * 59 + this.SIdType.GetHashCode();
                if (this.SIdNum != null)
                    hashCode = hashCode * 59 + this.SIdNum.GetHashCode();
                if (this.SIdExpiry != null)
                    hashCode = hashCode * 59 + this.SIdExpiry.GetHashCode();
                if (this.SContactNum != null)
                    hashCode = hashCode * 59 + this.SContactNum.GetHashCode();
                if (this.SEmail != null)
                    hashCode = hashCode * 59 + this.SEmail.GetHashCode();
                if (this.SCountry != null)
                    hashCode = hashCode * 59 + this.SCountry.GetHashCode();
                if (this.SCurrency != null)
                    hashCode = hashCode * 59 + this.SCurrency.GetHashCode();
                if (this.BCountry != null)
                    hashCode = hashCode * 59 + this.BCountry.GetHashCode();
                if (this.BCurrency != null)
                    hashCode = hashCode * 59 + this.BCurrency.GetHashCode();
                if (this.BAmount != null)
                    hashCode = hashCode * 59 + this.BAmount.GetHashCode();
                if (this.BIssuerCode != null)
                    hashCode = hashCode * 59 + this.BIssuerCode.GetHashCode();
                if (this.BAccNum != null)
                    hashCode = hashCode * 59 + this.BAccNum.GetHashCode();
                if (this.BBillNum != null)
                    hashCode = hashCode * 59 + this.BBillNum.GetHashCode();
                if (this.BAccName != null)
                    hashCode = hashCode * 59 + this.BAccName.GetHashCode();
                if (this.BStatementDate != null)
                    hashCode = hashCode * 59 + this.BStatementDate.GetHashCode();
                if (this.BDueDate != null)
                    hashCode = hashCode * 59 + this.BDueDate.GetHashCode();
                if (this.BBillType != null)
                    hashCode = hashCode * 59 + this.BBillType.GetHashCode();
                if (this.BCustomInfo1 != null)
                    hashCode = hashCode * 59 + this.BCustomInfo1.GetHashCode();
                if (this.BCustomInfo2 != null)
                    hashCode = hashCode * 59 + this.BCustomInfo2.GetHashCode();
                if (this.BCustomInfo3 != null)
                    hashCode = hashCode * 59 + this.BCustomInfo3.GetHashCode();
                if (this.BCustomInfo4 != null)
                    hashCode = hashCode * 59 + this.BCustomInfo4.GetHashCode();
                if (this.BCustomInfo5 != null)
                    hashCode = hashCode * 59 + this.BCustomInfo5.GetHashCode();
                if (this.BCustomInfo6 != null)
                    hashCode = hashCode * 59 + this.BCustomInfo6.GetHashCode();
                if (this.BCustomInfo7 != null)
                    hashCode = hashCode * 59 + this.BCustomInfo7.GetHashCode();
                if (this.BCustomInfo8 != null)
                    hashCode = hashCode * 59 + this.BCustomInfo8.GetHashCode();
                if (this.BCustomInfo9 != null)
                    hashCode = hashCode * 59 + this.BCustomInfo9.GetHashCode();
                if (this.BCustomInfo10 != null)
                    hashCode = hashCode * 59 + this.BCustomInfo10.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
