/* 
 * GloRemit - REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// DoBillInquiryModelResponse
    /// </summary>
    [DataContract]
    public partial class DoBillInquiryModelResponse :  IEquatable<DoBillInquiryModelResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DoBillInquiryModelResponse" /> class.
        /// </summary>
        /// <param name="InquiryStatus">InquiryStatus.</param>
        /// <param name="TransID">TransID.</param>
        /// <param name="Description">Description.</param>
        /// <param name="AccountName">AccountName.</param>
        /// <param name="StatementDate">StatementDate.</param>
        /// <param name="DueDate">DueDate.</param>
        /// <param name="Amount">Amount.</param>
        /// <param name="BillType">BillType.</param>
        /// <param name="CustomInfo1">CustomInfo1.</param>
        /// <param name="CustomInfo2">CustomInfo2.</param>
        /// <param name="CustomInfo3">CustomInfo3.</param>
        /// <param name="CustomInfo4">CustomInfo4.</param>
        /// <param name="CustomInfo5">CustomInfo5.</param>
        /// <param name="CustomInfo6">CustomInfo6.</param>
        /// <param name="CustomInfo7">CustomInfo7.</param>
        /// <param name="CustomInfo8">CustomInfo8.</param>
        /// <param name="CustomInfo9">CustomInfo9.</param>
        /// <param name="CustomInfo10">CustomInfo10.</param>
        public DoBillInquiryModelResponse(string InquiryStatus = default(string), string TransID = default(string), string Description = default(string), string AccountName = default(string), string StatementDate = default(string), string DueDate = default(string), string Amount = default(string), string BillType = default(string), string CustomInfo1 = default(string), string CustomInfo2 = default(string), string CustomInfo3 = default(string), string CustomInfo4 = default(string), string CustomInfo5 = default(string), string CustomInfo6 = default(string), string CustomInfo7 = default(string), string CustomInfo8 = default(string), string CustomInfo9 = default(string), string CustomInfo10 = default(string))
        {
            this.InquiryStatus = InquiryStatus;
            this.TransID = TransID;
            this.Description = Description;
            this.AccountName = AccountName;
            this.StatementDate = StatementDate;
            this.DueDate = DueDate;
            this.Amount = Amount;
            this.BillType = BillType;
            this.CustomInfo1 = CustomInfo1;
            this.CustomInfo2 = CustomInfo2;
            this.CustomInfo3 = CustomInfo3;
            this.CustomInfo4 = CustomInfo4;
            this.CustomInfo5 = CustomInfo5;
            this.CustomInfo6 = CustomInfo6;
            this.CustomInfo7 = CustomInfo7;
            this.CustomInfo8 = CustomInfo8;
            this.CustomInfo9 = CustomInfo9;
            this.CustomInfo10 = CustomInfo10;
        }
        
        /// <summary>
        /// Gets or Sets InquiryStatus
        /// </summary>
        [DataMember(Name="InquiryStatus", EmitDefaultValue=false)]
        public string InquiryStatus { get; set; }

        /// <summary>
        /// Gets or Sets TransID
        /// </summary>
        [DataMember(Name="transID", EmitDefaultValue=false)]
        public string TransID { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="Description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets AccountName
        /// </summary>
        [DataMember(Name="AccountName", EmitDefaultValue=false)]
        public string AccountName { get; set; }

        /// <summary>
        /// Gets or Sets StatementDate
        /// </summary>
        [DataMember(Name="StatementDate", EmitDefaultValue=false)]
        public string StatementDate { get; set; }

        /// <summary>
        /// Gets or Sets DueDate
        /// </summary>
        [DataMember(Name="DueDate", EmitDefaultValue=false)]
        public string DueDate { get; set; }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name="Amount", EmitDefaultValue=false)]
        public string Amount { get; set; }

        /// <summary>
        /// Gets or Sets BillType
        /// </summary>
        [DataMember(Name="BillType", EmitDefaultValue=false)]
        public string BillType { get; set; }

        /// <summary>
        /// Gets or Sets CustomInfo1
        /// </summary>
        [DataMember(Name="CustomInfo1", EmitDefaultValue=false)]
        public string CustomInfo1 { get; set; }

        /// <summary>
        /// Gets or Sets CustomInfo2
        /// </summary>
        [DataMember(Name="CustomInfo2", EmitDefaultValue=false)]
        public string CustomInfo2 { get; set; }

        /// <summary>
        /// Gets or Sets CustomInfo3
        /// </summary>
        [DataMember(Name="CustomInfo3", EmitDefaultValue=false)]
        public string CustomInfo3 { get; set; }

        /// <summary>
        /// Gets or Sets CustomInfo4
        /// </summary>
        [DataMember(Name="CustomInfo4", EmitDefaultValue=false)]
        public string CustomInfo4 { get; set; }

        /// <summary>
        /// Gets or Sets CustomInfo5
        /// </summary>
        [DataMember(Name="CustomInfo5", EmitDefaultValue=false)]
        public string CustomInfo5 { get; set; }

        /// <summary>
        /// Gets or Sets CustomInfo6
        /// </summary>
        [DataMember(Name="CustomInfo6", EmitDefaultValue=false)]
        public string CustomInfo6 { get; set; }

        /// <summary>
        /// Gets or Sets CustomInfo7
        /// </summary>
        [DataMember(Name="CustomInfo7", EmitDefaultValue=false)]
        public string CustomInfo7 { get; set; }

        /// <summary>
        /// Gets or Sets CustomInfo8
        /// </summary>
        [DataMember(Name="CustomInfo8", EmitDefaultValue=false)]
        public string CustomInfo8 { get; set; }

        /// <summary>
        /// Gets or Sets CustomInfo9
        /// </summary>
        [DataMember(Name="CustomInfo9", EmitDefaultValue=false)]
        public string CustomInfo9 { get; set; }

        /// <summary>
        /// Gets or Sets CustomInfo10
        /// </summary>
        [DataMember(Name="CustomInfo10", EmitDefaultValue=false)]
        public string CustomInfo10 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DoBillInquiryModelResponse {\n");
            sb.Append("  InquiryStatus: ").Append(InquiryStatus).Append("\n");
            sb.Append("  TransID: ").Append(TransID).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  AccountName: ").Append(AccountName).Append("\n");
            sb.Append("  StatementDate: ").Append(StatementDate).Append("\n");
            sb.Append("  DueDate: ").Append(DueDate).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  BillType: ").Append(BillType).Append("\n");
            sb.Append("  CustomInfo1: ").Append(CustomInfo1).Append("\n");
            sb.Append("  CustomInfo2: ").Append(CustomInfo2).Append("\n");
            sb.Append("  CustomInfo3: ").Append(CustomInfo3).Append("\n");
            sb.Append("  CustomInfo4: ").Append(CustomInfo4).Append("\n");
            sb.Append("  CustomInfo5: ").Append(CustomInfo5).Append("\n");
            sb.Append("  CustomInfo6: ").Append(CustomInfo6).Append("\n");
            sb.Append("  CustomInfo7: ").Append(CustomInfo7).Append("\n");
            sb.Append("  CustomInfo8: ").Append(CustomInfo8).Append("\n");
            sb.Append("  CustomInfo9: ").Append(CustomInfo9).Append("\n");
            sb.Append("  CustomInfo10: ").Append(CustomInfo10).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DoBillInquiryModelResponse);
        }

        /// <summary>
        /// Returns true if DoBillInquiryModelResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of DoBillInquiryModelResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DoBillInquiryModelResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.InquiryStatus == input.InquiryStatus ||
                    (this.InquiryStatus != null &&
                    this.InquiryStatus.Equals(input.InquiryStatus))
                ) && 
                (
                    this.TransID == input.TransID ||
                    (this.TransID != null &&
                    this.TransID.Equals(input.TransID))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.AccountName == input.AccountName ||
                    (this.AccountName != null &&
                    this.AccountName.Equals(input.AccountName))
                ) && 
                (
                    this.StatementDate == input.StatementDate ||
                    (this.StatementDate != null &&
                    this.StatementDate.Equals(input.StatementDate))
                ) && 
                (
                    this.DueDate == input.DueDate ||
                    (this.DueDate != null &&
                    this.DueDate.Equals(input.DueDate))
                ) && 
                (
                    this.Amount == input.Amount ||
                    (this.Amount != null &&
                    this.Amount.Equals(input.Amount))
                ) && 
                (
                    this.BillType == input.BillType ||
                    (this.BillType != null &&
                    this.BillType.Equals(input.BillType))
                ) && 
                (
                    this.CustomInfo1 == input.CustomInfo1 ||
                    (this.CustomInfo1 != null &&
                    this.CustomInfo1.Equals(input.CustomInfo1))
                ) && 
                (
                    this.CustomInfo2 == input.CustomInfo2 ||
                    (this.CustomInfo2 != null &&
                    this.CustomInfo2.Equals(input.CustomInfo2))
                ) && 
                (
                    this.CustomInfo3 == input.CustomInfo3 ||
                    (this.CustomInfo3 != null &&
                    this.CustomInfo3.Equals(input.CustomInfo3))
                ) && 
                (
                    this.CustomInfo4 == input.CustomInfo4 ||
                    (this.CustomInfo4 != null &&
                    this.CustomInfo4.Equals(input.CustomInfo4))
                ) && 
                (
                    this.CustomInfo5 == input.CustomInfo5 ||
                    (this.CustomInfo5 != null &&
                    this.CustomInfo5.Equals(input.CustomInfo5))
                ) && 
                (
                    this.CustomInfo6 == input.CustomInfo6 ||
                    (this.CustomInfo6 != null &&
                    this.CustomInfo6.Equals(input.CustomInfo6))
                ) && 
                (
                    this.CustomInfo7 == input.CustomInfo7 ||
                    (this.CustomInfo7 != null &&
                    this.CustomInfo7.Equals(input.CustomInfo7))
                ) && 
                (
                    this.CustomInfo8 == input.CustomInfo8 ||
                    (this.CustomInfo8 != null &&
                    this.CustomInfo8.Equals(input.CustomInfo8))
                ) && 
                (
                    this.CustomInfo9 == input.CustomInfo9 ||
                    (this.CustomInfo9 != null &&
                    this.CustomInfo9.Equals(input.CustomInfo9))
                ) && 
                (
                    this.CustomInfo10 == input.CustomInfo10 ||
                    (this.CustomInfo10 != null &&
                    this.CustomInfo10.Equals(input.CustomInfo10))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.InquiryStatus != null)
                    hashCode = hashCode * 59 + this.InquiryStatus.GetHashCode();
                if (this.TransID != null)
                    hashCode = hashCode * 59 + this.TransID.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.AccountName != null)
                    hashCode = hashCode * 59 + this.AccountName.GetHashCode();
                if (this.StatementDate != null)
                    hashCode = hashCode * 59 + this.StatementDate.GetHashCode();
                if (this.DueDate != null)
                    hashCode = hashCode * 59 + this.DueDate.GetHashCode();
                if (this.Amount != null)
                    hashCode = hashCode * 59 + this.Amount.GetHashCode();
                if (this.BillType != null)
                    hashCode = hashCode * 59 + this.BillType.GetHashCode();
                if (this.CustomInfo1 != null)
                    hashCode = hashCode * 59 + this.CustomInfo1.GetHashCode();
                if (this.CustomInfo2 != null)
                    hashCode = hashCode * 59 + this.CustomInfo2.GetHashCode();
                if (this.CustomInfo3 != null)
                    hashCode = hashCode * 59 + this.CustomInfo3.GetHashCode();
                if (this.CustomInfo4 != null)
                    hashCode = hashCode * 59 + this.CustomInfo4.GetHashCode();
                if (this.CustomInfo5 != null)
                    hashCode = hashCode * 59 + this.CustomInfo5.GetHashCode();
                if (this.CustomInfo6 != null)
                    hashCode = hashCode * 59 + this.CustomInfo6.GetHashCode();
                if (this.CustomInfo7 != null)
                    hashCode = hashCode * 59 + this.CustomInfo7.GetHashCode();
                if (this.CustomInfo8 != null)
                    hashCode = hashCode * 59 + this.CustomInfo8.GetHashCode();
                if (this.CustomInfo9 != null)
                    hashCode = hashCode * 59 + this.CustomInfo9.GetHashCode();
                if (this.CustomInfo10 != null)
                    hashCode = hashCode * 59 + this.CustomInfo10.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
